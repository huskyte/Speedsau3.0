[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_220034001051313236343430-if00

[mcu EBBCan]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_btt-ebb42-12-if00


#############################################################################################################
### Ratos pin translator
#############################################################################################################

# WARNING. DO NOT EDIT THIS FILE.
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.
# WARNING: it is NOT recommended to override board_pins aliases, 
# use the boards pin names directly in your printer.cfg instead. 
# Look up the pins you need in the boards pinout diagram.

[board_pins my_aliases]
aliases:
# steppers
  x_step_pin=PF13,   x_dir_pin=PF12,   x_enable_pin=PF14,   x_uart_pin=PC4,   x_diag_pin=PG6,   x_endstop_pin=PG6,
  y_step_pin=PG0,   y_dir_pin=PG1,   y_enable_pin=PF15,   y_uart_pin=PD11,   y_diag_pin=PG9,   y_endstop_pin=PG9,
  z0_step_pin=PC13,  z0_dir_pin=PF0,  z0_enable_pin=PF1,  z0_uart_pin=PE4,  z0_diag_pin=null,
  z1_step_pin=PE2,  z1_dir_pin=PE3,  z1_enable_pin=PD4,  z1_uart_pin=PE1,  z1_diag_pin=null,
  z2_step_pin=PE6,  z2_dir_pin=PA14,  z2_enable_pin=PE0,  z2_uart_pin=PD3,  z2_diag_pin=null,
  z3_step_pin=PF9,	z3_dir_pin=PF10,	z3_enable_pin=PG2,	z3_uart_pin=PF2, z3_diag_pin=null, # Voron 2.4 support
  e_step_pin=PF11,   e_dir_pin=PG3,   e_enable_pin=PG5,   e_uart_pin=PC6,   e_diag_pin=null,   e_heater_pin=PA0,  e_sensor_pin=PF4,
  # Hybrid CoreXY Single Toolhead
  y1_step_pin=PG4,   y1_dir_pin=PC1,   y1_enable_pin=PA2,   y1_uart_pin=PC7,   y1_diag_pin=PG11,
  x1_step_pin=PF9,   x1_dir_pin=PF10,   x1_enable_pin=PG2,   x1_uart_pin=PF2,   x1_diag_pin=PG12,
  # Hybrid CoreXY IDEX
  dual_carriage_step_pin=PF9,   dual_carriage_dir_pin=PF10,   dual_carriage_enable_pin=PG2,   dual_carriage_uart_pin=PF2,   dual_carriage_diag_pin=PG12,
  dual_carriage_heater_pin=PA3,  dual_carriage_sensor_pin=PF5,
  # SPI Drivers
  stepper_spi_mosi_pin=PA7,  stepper_spi_miso_pin=PA6,  stepper_spi_sclk_pin=PA5,
# accel
  adxl345_cs_pin=PA15,
# auto leveling
  bltouch_sensor_pin=PB7,  bltouch_control_pin=PB6,
  probe_pin=PB7,
# fans
  fan_part_cooling_pin=PA8,
  fan_toolhead_cooling_pin=PE5,
  fan_controller_board_pin=PD12,
# Bed heater
  heater_bed_heating_pin=PA1,
  heater_bed_sensor_pin=PF3,
  
## Expansion ports
  # EXP1 header
  EXP1_1=PE8, EXP1_3=PE9, EXP1_5=PE12, EXP1_7=PE14, EXP1_9=<GND>,
  EXP1_2=PE7, EXP1_4=PE10, EXP1_6=PE13, EXP1_8=PE15, EXP1_10=<5V>,
  # EXP2 header
  EXP2_1=PA6, EXP2_3=PB1, EXP2_5=PB2, EXP2_7=PC15,  EXP2_9=<GND>,
  EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=PC5,
  # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"

#############################################################################################################
### Alle includes
#############################################################################################################

[include mainsail.cfg]
# [include macro.cfg]


[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]


[temperature_sensor Octopus_Pro_h723]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 400 # was 1000
max_accel: 40000 # 70k
max_z_velocity: 300
max_z_accel: 150 # default 150
square_corner_velocity: 10

#############################################################################################################
### Shaketune
#############################################################################################################

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.



#############################################################################################################
### EBB
#############################################################################################################

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_pin: EBBCan: PA3
min_temp: 0
pressure_advance: 0.035 # according to latest test with VZBot and ASA, speed was 0.005, with FMMM at 400/40k rather 0.035
rotation_distance: 22 # (Tune it with a 200mm extrusion test) gear_ratio: 50:10 (For 10th motor gear)
gear_ratio: 50:8
sensor_type: PT1000
max_temp: 350

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.707
stealthchop_threshold: 0
interpolate: False
driver_TBL: 1
driver_TOFF: 3
driver_HEND: 9
driver_HSTRT: 7

[fan]
pin: EBBCan: PA0

[heater_fan hotend_fan]
pin: EBBCan: PA1
heater: extruder
heater_temp: 50.0



#############################################################################################################
### CPAP
#############################################################################################################

# copied from vcore.cfg for fan install, fan_part_cooling_pin=PA8 for CPap. directly connected to 24 V, PWM via Octopus. Accepts 3-5 V PWM


[fan] #        CPAP print Cooling Fan\
pin: PG15 # for ocotopus pro Endstop 7 header
max_power: 1 # adjust below 1 if you would like the max speed to be slower
off_below: 0.2 # minimum speed where the fan starts spinning - on octopus pro this is correct - will be lower maybe 0 on mellow Super 8 because of different GPIO pullup and protection resistors
cycle_time: .0005 # = 2khz - CPAP fan driver recommended range is 2-50khz
enable_pin: PA3 # Heater pad GND
#tachometer_pin: ^PD15 # Mit Vordach, da sonst nix funzt
#tachometer_ppr: 2
#tachometer_poll_interval: 0.0005
cycle_time: 0.00004 # WÃ¤re noch eine Variante



# For the controllerfan as override bequiet 3 pin with tach
# [controller_fan controller_fan]
# tachometer_pin: ^PD13
# tachometer_poll_interval: 0.0005
# cycle_time: 0.00004

[controller_fan stepper_fan]
pin: PA8
cycle_time: 0.00004

#############################################################################################################
### STEPPER
#############################################################################################################


#############################################
# Autotune TMC
#   "##" for disabled values due to autotuning
#############################################


[autotune_tmc stepper_x]
motor: ldo-42sth48-2504ah
sgt: 1
voltage: 53

[autotune_tmc stepper_y]
motor: ldo-42sth48-2504ah
voltage: 53

[autotune_tmc stepper_x1]
motor: ldo-42sth48-2504ah
sgt: 1
voltage: 53

[autotune_tmc stepper_y1]
motor: ldo-42sth48-2504ah
voltage: 53

[autotune_tmc stepper_z]
motor: ldo-42sth48-2504ah
tuning_goal: performance
voltage: 53

[autotune_tmc stepper_z1]
motor: ldo-42sth48-2504ah
tuning_goal: performance
voltage: 53

[autotune_tmc stepper_z2]
motor: ldo-42sth48-2504ah
tuning_goal: performance
voltage: 53


[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg
voltage: 24

#############################################################################################################
### PRINTER CONFIGURATION
### Stepper
#############################################################################################################
[stepper_x]
dir_pin: x_dir_pin # Add ! in front of pin name to reverse X stepper direction
rotation_distance: 40 # 40 for 20 tooth 2GT pulleys, 32 for 16 tooth 2GT pulleys
microsteps: 32
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_endstop: -5 # was 0
position_min: -5 # was -1
position_max: 200
homing_retract_dist: 0 # going back during retries
homing_speed: 80
step_pin: PF13
enable_pin: !PF14



[stepper_y]
dir_pin: y_dir_pin # Add ! in front of pin name to reverse Y stepper direction
rotation_distance: 40 # 40 for 20 tooth 2GT pulleys, 32 for 16 tooth 2GT pulleys
microsteps: 32
endstop_pin: PG9
homing_positive_dir: true
homing_retract_dist: 5.0
position_min: 0
position_max: 200
position_endstop: 200
homing_speed: 80
step_pin: PG0
# dir_pin: PG1
enable_pin: !PF15


[stepper_x1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA2
rotation_distance: 40
microsteps: 32

[stepper_y1]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
microsteps: 32




[stepper_z]
dir_pin: !z0_dir_pin # Add ! in front of pin name to reverse Z stepper direction
rotation_distance: 4 # 4 for TR8*4 lead screws
endstop_pin: probe:z_virtual_endstop
step_pin: z0_step_pin
enable_pin: !z0_enable_pin
microsteps: 32
position_min: -3 # Needed for z-offset calibration and tilt_adjust. default -5, but too much if z hop is limited to 5 as well
homing_speed: 10
position_max: 200



[stepper_z1]
dir_pin: !z1_dir_pin # Add ! in front of pin name to reverse Z1 direction
rotation_distance: 4 # 4 for TR8*4 lead screws

[stepper_z2]
dir_pin: !z2_dir_pin # Add ! in front of pin name to reverse Z2 direction
rotation_distance: 4 # 4 for TR8*4 lead screws







#5160er into printer.cfg as not fully available as includes

[tmc5160 stepper_y]
cs_pin: y_uart_pin
spi_software_mosi_pin: stepper_spi_mosi_pin
spi_software_miso_pin: stepper_spi_miso_pin
spi_software_sclk_pin: stepper_spi_sclk_pin
run_current: 2.5 # default 1.8
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_y1]
cs_pin: PF2
spi_software_mosi_pin: stepper_spi_mosi_pin
spi_software_miso_pin: stepper_spi_miso_pin
spi_software_sclk_pin: stepper_spi_sclk_pin
run_current: 2.5 # default 1.8
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_x]
cs_pin: x_uart_pin
spi_software_mosi_pin: stepper_spi_mosi_pin
spi_software_miso_pin: stepper_spi_miso_pin
spi_software_sclk_pin: stepper_spi_sclk_pin
run_current: 2.5 # default 1.8
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6
diag1_pin: ^!x_diag_pin
driver_SGT: 1 #-64 is the most sensitive for 5160 https://docs.vorondesign.com/community/howto/clee/sensorless_xy_homing.html#finding-the-right-stallguard-threshold, was 1
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_x1]
cs_pin:PC7
spi_software_mosi_pin: stepper_spi_mosi_pin
spi_software_miso_pin: stepper_spi_miso_pin
spi_software_sclk_pin: stepper_spi_sclk_pin
run_current: 2.5 # default 1.8
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6
stealthchop_threshold: 0
interpolate: true


[tmc5160 stepper_z]
cs_pin: z0_uart_pin
spi_software_mosi_pin: stepper_spi_mosi_pin
spi_software_miso_pin: stepper_spi_miso_pin
spi_software_sclk_pin: stepper_spi_sclk_pin
run_current: 1.6
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6
interpolate: true

[tmc5160 stepper_z1]
cs_pin: z1_uart_pin
spi_software_mosi_pin: stepper_spi_mosi_pin
spi_software_miso_pin: stepper_spi_miso_pin
spi_software_sclk_pin: stepper_spi_sclk_pin
run_current: 1.6
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6
interpolate: true

[tmc5160 stepper_z2]
cs_pin: z2_uart_pin
spi_software_mosi_pin: stepper_spi_mosi_pin
spi_software_miso_pin: stepper_spi_miso_pin
spi_software_sclk_pin: stepper_spi_sclk_pin
run_current: 1.6
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 6
interpolate: true





[stepper_z1]
step_pin: z1_step_pin
dir_pin: !z1_dir_pin
enable_pin: !z1_enable_pin
rotation_distance: 4
microsteps: 32


[stepper_z2]
step_pin: z2_step_pin
dir_pin: !z2_dir_pin
enable_pin: !z2_enable_pin
rotation_distance: 4
microsteps: 32

#############################################################################################################
### SMART FILAMENT SENSOR
#############################################################################################################


[filament_switch_sensor switch_sensor]
switch_pin: PG10
pause_on_runout: False
runout_gcode:
    RESPOND MSG="Filament runout!"
    G91
    G1 E-5 F2100
    G1 Z10
    G90
    G1 X175 Y195 F6000
#insert_gcode:
#  M117 Filament switch inserted

[filament_motion_sensor BTT]
switch_pin: PG11
detection_length: 2.88
extruder: extruder
pause_on_runout: False
runout_gcode:
    RESPOND MSG="Filament runout!"
    G91
    G1 E-5 F2100
    G1 Z10
    G90
    G1 X175 Y195 F6000
#insert_gcode:
#  M117 Filament encoder inserted


#############################################################################################################
### Pi Fan
#############################################################################################################

[controller_fan Raspberry]
pin: PD15
idle_timeout: 180
idle_speed: .7


#############################################################################################################
### PTC
#############################################################################################################

[heater_bed]
heater_pin: PA1
sensor_pin: PF3 # TB
sensor_type: ATC Semitec 104GT-2
#control: watermark
min_temp: 0
max_temp: 130

[temperature_fan cooler]
gcode_id: F                       # shows the fan in the heater widget
sensor_type: ATC Semitec 104GT-2  # choose the thermistor which is built into the heater itself
sensor_pin: PF4                   # Set the pin for this thermistor
pin: PB0                         # this is the pin where the fan is connected to
max_temp: 95.0                   # set the max temp at which klipper should halt (last line of defense)
target_temp: 50.0                 # target temp... I chosed 40Â° to have the fan at 100% if the PTC is >40Â°
min_temp: 0                       # Set to 0
shutdown_speed: 0.0               # Shutdown speed is not really necessary, but a n2h
kick_start_time: 0.5              # same here
max_speed: 1.0                    # Well... 100% speed as max
min_speed: 1.0                    # Min speed... should be 0
control: watermark                      # pid control is needed here
max_delta: 0.5                    # Set the delta in degrees between heater on/off


[heater_generic chamberL]
gcode_id: D                       # shows the heater on the heater widget
heater_pin: PA0                  # pin
sensor_pin: PF5                   # PTC Element, PF5 Thermistor Links, PF6 Thermistor rechts
Sensor_type: ATC Semitec 104GT-2
max_power: 0.5
control: pid
pid_kp: 62.670
pid_ki: 3.833
pid_kd: 256.164
max_temp: 80                      # Set the max chamber temp
min_temp: 0                       # Set min temp to 0

[heater_generic chamberR]
gcode_id: H                       # shows the heater on the heater widget
heater_pin: PB11                  # pin
sensor_pin: PF6                   # PTC Element, PF5 Thermistor Links, PF6 Thermistor rechts
Sensor_type: ATC Semitec 104GT-2
max_power: 0.5
control: pid
pid_kp: 62.670
pid_ki: 3.833
pid_kd: 256.164
max_temp: 80                      # Set the max chamber temp
min_temp: 0                       # Set min temp to 0


[controller_fan PTC_Right]
pin: PE5
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.500
off_below: 0.1
idle_timeout: 180
heater: chamberL, chamberR, heater_bed
idle_speed: .7


[controller_fan PTC_Left]
pin: PD14
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.500
off_below: 0.1
idle_timeout: 180
heater: chamberL, chamberR, heater_bed
idle_speed: .7

[controller_fan Back_Panel]
pin: PD12
max_power: 1.0
#shutdown_speed:
#cycle_time:
#hardware_pwm:
kick_start_time: 0.5
off_below: 0.2
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 60
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
idle_speed: 0.7
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
# heater: heater_bed
stepper: stepper_x, stepper_y, stepper_z


#############################################################################################################
### Beaconzeusch
#############################################################################################################

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_887DCC124E5737374D202020FF0A3B0F-if00
# mesh_main_direction: x
# mesh_runs: 2
# speed: 15.
# lift_speed: 80.
# accel_axes_map: -x, -y, z
# z_offset: 0
#speed: 5.
#   Z probing dive speed.
#lift_speed: 5.
#   Z probing lift speed.
#backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0.0
#   X offset of beacon from the nozzle.
y_offset: 27.0
#   Y offset of beacon from the nozzle.
#trigger_distance: 2.
#   Beacon trigger distance for homing.
#trigger_dive_threshold: 1.
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
#trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
#z_settling_time: 5
#   Delay (in ms) for the Z axis to settle before taking proximity measurements.
#cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
#cal_floor: 0.2
#   Minimum z bound on sensor response measurement.
#cal_ceil: 5.
#   Maximum z bound on sensor response measurement.
#cal_speed: 1.
#   Speed while measuring response curve.
#cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
#default_model_name: default
#   Name of default beacon model to load.
#mesh_main_direction: y
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
#mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
#mesh_runs: 1
#   Number of passes to make during mesh scan.
#zero_reference_cluster_size: 1.
#   Radius of cluster used for zero reference position, this is the equivalent
#   of mesh_cluster_size for the zero reference position.
#accel_scale: 16g
#   Adjust the sensitivity of the accelerometer during shaper measurement,
#   valid settings on RevH are 16g, 8g, 4g and 2g.
#accel_axes_map: x, y, z
#   Reassign or invert axes of the accelerometer to align with machine coordinates.

#default_probe_method: proximity|contact
# Sets the default probing method for mesh, tilt, qgl, probe, etc.
contact_max_hotend_temperature: 180 # increase to enable hot contacting
# Temperature limit for the hotend when contacting, override this for temps which may damage some surfaces.
#contact_sensitivity: 0
# Adjusts noise tolerance of contact processing. Values 0-3 are valid, with 3 tolerating the most noise.
#contact_latency_min: 0
# Limits how low of a latency contact is allowed to advance.

# new additions for beacon safe_z_home functionality
home_xy_position: 100, 100
# X, Y coordinate for homing z via contact.
home_z_hop: 5
# Distance to retract before x/y homing moves.
home_z_hop_speed: 30
# Retraction speed for z hop.
home_xy_move_speed: 300
# Speed for moving to home_xy_position.
#home_y_before_x: False
# If set, the Y axis will home first when using the beacon safe_z_home

# new additions for setting default homing mode
home_method: contact  # |proximity
# Sets default homing method used by G28. `proximity` requires a valid beacon model to be loaded.
home_method_when_homed: proximity # defaults to `home_method` value
# Sets the homing method when the machine is already in a homed state.
home_autocalibrate: unhomed
# Sets the autocalibration behavior. `always` will autocal on every home, `unhomed` on initial homing,
# `never` will never so that models stored in config may be used with proximity homing.

home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
# Enables a gcode macro before homing the x axis
home_gcode_post_x: _HOME_POST_AXIS AXIS=X
# Enables a gcode macro after homing the x axis
home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
# Enables a gcode macro before homing the y axis
home_gcode_post_y: _HOME_POST_AXIS AXIS=Y
# Enables a gcode macro after homing the x axis

#contact_activate_gcode: _CONTACT_ACTIVATE
# Enables a gcode macro to be called before contact is activated
#contact_deactivate_gcode: _CONTACT_DEACTIVATE
# Enables a gcode macro to be called after contact is deactivated

# new autocalibration config options
#autocal_speed: 3
# Speed during contact movement. Probing outside of 2-5mm/s not recommended and at your own risk.
#autocal_accel: 100
# Acceleration of autocal movement.
#autocal_retract_dist: 2
# Retract distance between autocal samples.
#autocal_retract_speed: 10
# Speed of autocal retraction move.
#autocal_sample_count: 3
# Number of samples used for each autocal.
#autocal_tolerance: 0.008
# Acceptance tolerance for an autocal result.
#autocal_max_retries: 3
# Number of retry attempts permitted when tolerance is exceeded.



[gcode_macro _HOME_PRE_AXIS]
gcode:
  # Adapt this for your printer.
  {% set HOME_CURRENT = 0.7 %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

[gcode_macro _HOME_POST_AXIS]
gcode:
  {% set axis = params.AXIS %}
  {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}

  # Move away
  SAVE_GCODE_STATE NAME=home_post_axis
  G90
  G0 {axis}100 F3600
  RESTORE_GCODE_STATE NAME=home_post_axis

  # Make sure StallGuard registers are cleared
  M400
  # Set current during print
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[resonance_tester]
accel_chip: beacon
#   Selects beacon as the accelerometer used for resonance testing. This value
#   can be used to switch between multiple accelerometers in your system.
probe_points: 100, 100, 20


#############################################################################################################
### NEOPIXEL
#############################################################################################################


[neopixel overhead_speed]
pin: PB10 # toolboard:PD3
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 45
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

[led_effect panel_idle]
autostart:              false
frame_rate:             24
leds:
    neopixel:overhead_speed
layers:
    breathing  10 1 top (.8,.8,1)

[led_effect critical_error]
leds:
    neopixel:overhead_speed
layers:
    breathing  10 1 top (0,1,0)
autostart:                             false
frame_rate:                            24
run_on_error:                          true


[gcode_macro LIGHTS_OFF_CHAMBER]
gcode:
    SET_LED LED=overhead_speed RED=0 GREEN=0 BLUE=0 WHITE=0

[gcode_macro LIGHTS_ON_CHAMBER]
gcode:
    SET_LED LED=overhead_speed RED=1 GREEN=1 BLUE=1 WHITE=1


# Frame Neopixel

[gcode_macro LIGHTS_OFF]
gcode:
    SET_LED LED=overhead_speed RED=0 GREEN=0 BLUE=0 WHITE=0
#    SET_LED LED=hotend RED=0 GREEN=0 BLUE=0 WHITE=0
    STOP_LED_EFFECTS
[gcode_macro LIGHTS_ON]
gcode:
    SET_LED LED=overhead_speed RED=1 GREEN=1 BLUE=1 WHITE=1
#    SET_LED LED=hotend RED=1 GREEN=0.6 BLUE=0 WHITE=0


# This is the toggle code:
[gcode_macro LIGHTS_TOGGLE]
gcode:
    {% if printer["neopixel overhead_speed"].color_data[1][2] > 0 %}
    LIGHTS_OFF
    {% else %}
    LIGHTS_ON
    {% endif %}


[bed_mesh]
# speed: 800
# probe_count: 5, 3
horizontal_move_z: 5
mesh_min: 20,30
mesh_max:180,170
probe_count: 20,20
fade_start: 1.0
fade_end: 10.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: .2
speed: 400


[z_tilt]
z_positions:
    0,0
    100,200
    200,0

points:
    10,10
    100,160
    190,10

horizontal_move_z: 12
retries: 10
retry_tolerance: 0.01
speed: 400

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.887
#*# pid_ki = 3.250
#*# pid_kd = 304.217
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.601
#*# pid_ki = 1.569
#*# pid_kd = 81.368
#*#
#*# [beacon model default]
#*# model_coef = 1.5991238480060674,
#*# 	  1.897261149278664,
#*# 	  0.7094734723627284,
#*# 	  0.312484347464761,
#*# 	  0.23523579183437493,
#*# 	  0.2623577614440274,
#*# 	  -0.0268085540458752,
#*# 	  -0.19810837440175594,
#*# 	  0.08425394156404242,
#*# 	  0.12910929664891355
#*# model_domain = 1.87271301774841e-07,1.9329799254843643e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 25.710568
#*# model_offset = 0.00000
